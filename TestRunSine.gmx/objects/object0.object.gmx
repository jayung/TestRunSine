<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Varaibles
global.i = 0;

//This is how far you've gotten in your game
global.distance = 0;
 
global.sinHeight = 100;
//This number effects how FAST the sine graph speeds past the player
global.leftSpeed = 10;
//This Number effects how BIG the dips are in the graph
global.dips = (360);

//height
global.sinHeight_2 = 100;
//This number effects how FAST the sine graph speeds past the player
global.leftSpeed_2 = 10;
//This Number effects how BIG the dips are in the graph
global.dips_2 = (360);


// powerup 0 is false
global.isPlayerPoweredUp = 0;
global.powerupTimer = 0;


// Dash Feature 0 is not dashing
global.isDashing = 0;
global.dashCharges = 3;
global.dashMaxTime = 60*1;
global.dashTimer = 0;

//background and object velocity
global.wallVelocity = 2;
global.powerupVelocity = 2;
global.backgroundVelocity = -1;
//font



//If our piece is disconnected from the wave, then its 1
global.pieceDisconnected = 0; 
//This variable will be what we want our sinHeight to reach incrementally.
global.sinHeightGoal = 11;
//This Varaible is how quickly we want to reach our height Goal
global.sinHeightInc = 1;

global.dipsGoal = 360;
global.dipsInc = 1;

//Is it ok to re-adjust wave based on mouse down
global.mousePressed = 0;
global.startPoint = 220;
x = 0;
if !audio_is_playing(sound_1)
   {
    audio_play_sound(sound_1, 10, true);
   }

//weather 
global.weather = 2;


//global.Sname = part_system_create();

// adds

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step Code
//if we are powered up then subtract time

if (global.powerupTimer == 1){
    global.isPlayerPoweredUp = 0;
}

if (global.powerupTimer != 0){
    global.powerupTimer -= 1;
}
if (global.dashTimer  &gt; 1){
    global.dashTimer -= 1;
    if background_htiled[0]
    {
      background_hspeed[0] = global.backgroundVelocity ;
    }
} else if (global.dashTimer == 1){
    global.backgroundVelocity = -1;
    global.dashTimer -= 1;
    if background_htiled[0]
    {
      background_hspeed[0] = global.backgroundVelocity ;
    }
    global.wallVelocity = 2;
    global.powerupVelocity = 2;
} else {
    global.isDashing = 0;
}

if (global.dips_2 &gt; 360){
global.dips_2 -= 1;
global.dips -= 1;
}
//show_debug_message(string( global.dips_2 ));
// increase score (which is distance
global.distance += 1;

if place_meeting(x, y, wall) &amp;&amp; (global.isPlayerPoweredUp == 0) &amp;&amp; (global.isDashing == 0){
    instance_create(160, 192, obj_startbtn);
    instance_create(160, 256, obj_optionsBtn);
    with (obj_dash){
        instance_destroy();
    }
    with (obj_coin){
        instance_destroy();
    }
    with (obj_powerup){
        instance_destroy();
    }
    with (obj_shieldup){
        instance_destroy();
    }
    with (obj_light){
        instance_destroy();
    }
    with (wall){
        instance_destroy();
    }
    
    if (global.distance &gt; highscore_value(1)){
        highscore_clear();
        highscore_add("You", global.distance);
    }
    
    instance_destroy();
    
 }

 var screenMinY = 130;
 var screenMaxY = 300;
var ran = 0;
ran = irandom_range(0, 140);

if (ran == 5){
    ran = irandom_range(screenMinY, screenMaxY);
    instance_create(340, ran, wall);

} 
ran = irandom_range(0, 320);
if (ran == 6){
    ran = irandom_range(220, 230);
    instance_create(340, ran, wall);
}

// Coin
ran = irandom_range(0, 140);
if (ran == 5){
    ran = irandom_range(screenMinY, screenMaxY);
    instance_create(340, ran, obj_coin);
} 

// powerup invulnerability
ran = irandom_range(0, 4000);
if (ran == 5){
    ran = irandom_range(screenMinY, screenMaxY);
    instance_create(340, ran, obj_powerup);
} 

//powerup shield +1
ran = irandom_range(0, 6000);
if (ran == 5){
    ran = irandom_range(screenMinY, screenMaxY);
    instance_create(340, ran, obj_shieldup);
} 


//Adjusting the WAVE to reach its goal
/*
if (global.sinHeight &lt; global.sinHeightGoal){
    global.sinHeight += global.sinHeightInc;
} else if(global.sinHeight &gt; global.sinHeightGoal){
    global.sinHeight -= global.sinHeightInc;
}
if (global.dips &lt; global.dipsGoal){
    global.dips += global.dipsInc;
} else if(global.dips &gt; global.dipsGoal){
    global.dips -= global.dipsInc;
}
*/

if device_mouse_check_button(0, mb_left)
   {
   
      //Real Code
      //if (y &lt; (220-5)) || (y &gt; (220+5)){
        //no change
      //} else {
      
         // show_debug_message(string(device_mouse_x(0) * 4 ));
          //global.dips_2 = device_mouse_x(0) * 4 ;
          //if (global.dips_2 &lt; 175){
          //  global.dips_2 = 175;
         // }
          //global.sinHeight_2 = (room_height /  2) - (device_mouse_y(0) / 1);
          //global.startPoint = y;
          if (global.isDashing == 0){
            global.i += (device_mouse_y(0) / 4)
          }
          global.mousePressed = 0;
      //}
      //global.pieceDisconnected = 1;
   } else {
        if (global.mousePressed == 0){
            global.mousePressed = 1;
        }
   }
//show_debug_message(string(global.mousePressed ));


//first piece
//This number effects how fast the sine goes, from right to left
global.i += global.leftSpeed;


if (global.mousePressed == 1){
    global.dips = global.dips_2;
    global.sinHeight = global.sinHeight_2;
    global.mousePressed = 2;
    //global.startPoint = y;
    //global.i = 0;
    
}

if (global.i &gt;= (global.dips*360) ){
    global.i = 0;
}
var y_to = global.startPoint + sin( global.i / global.dips) * global.sinHeight;
var y_inc = 8;

    if (y &lt; (y_to-(y_inc*2))){
         global.pieceDisconnected = 1;
        
    } else if (y &gt; (y_to+(y_inc*2))){
        global.pieceDisconnected = 1;
    } else {
        y = global.startPoint + sin( global.i / global.dips) * global.sinHeight;
    }
if (global.pieceDisconnected == 1){
    if (y &lt; (y_to-(y_inc*2))){
        y += y_inc;
        
    } else if (y &gt; (y_to+(y_inc*2))){
        y -= y_inc;
    } else {
        global.pieceDisconnected = 0;
    }
}

global.leftSpeed += (0.01 / 60);
//show_debug_message(string( global.leftSpeed ));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.i -= 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.dashCharges &gt; 0) &amp;&amp; (global.dashTimer == 0){
    global.isDashing = 1;
    global.dashCharges -= 1;
    global.dashTimer = global.dashMaxTime;
    global.backgroundVelocity -= 3;
    global.wallVelocity = 6;
    global.powerupVelocity = 6;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.dips_2 += 10;
global.dips += 10;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Down Arrow Code
global.sinHeight -= 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.leftSpeed -= 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Up Arrow Code
global.sinHeight += 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.leftSpeed += 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//This number effects how fast the sine goes, from right to left
global.i += global.leftSpeed;


// Display Information to Player:

draw_set_font(font0);
draw_set_colour(c_aqua);
draw_text(0, 440, "Score: " + string(global.distance));
draw_text(250, 440, "Dash: " + string(global.dashCharges));
draw_text(100, 20, "Highscore: " + string(highscore_value(1)));

//first peice
draw_sprite(sprite0, image_index, x , y);

draw_set_colour(c_red);
global.e = global.i;
//draw_point(x - (global.e), 220 + sin( global.e ) * global.sinHeight );


//draw_point(x, global.startPoint + sin( global.i  / global.dips ) * global.sinHeight );


var counting = 0;
var extraX = 0;

while (counting &lt; 320)
   {
    counting += 1;
   if (global.isPlayerPoweredUp == 1){
    draw_set_colour(c_red);
    draw_point(x + (counting), global.startPoint + sin( (global.i + counting) / global.dips ) * global.sinHeight );
    draw_point(x + (counting), 1 + global.startPoint + sin( (global.i + counting) / global.dips ) * global.sinHeight );
    draw_point(x + (counting), 2 + global.startPoint + sin( (global.i + counting) / global.dips ) * global.sinHeight );
    draw_point(x + (counting), 3 + global.startPoint + sin( (global.i + counting) / global.dips ) * global.sinHeight );
  
   } else if (global.isDashing == 1){
     draw_set_colour(c_yellow);
     draw_point(x + (counting), y );
     draw_point(x + (counting), y );
   
   } else {
     draw_set_colour(c_green);
     draw_point(x + (counting), 12+global.startPoint  + sin( (global.i + counting) / global.dips_2 ) * global.sinHeight_2 );
     draw_point(x + (counting), 12+ 1 + global.startPoint  + sin( (global.i + counting) / global.dips_2 ) * global.sinHeight_2 );
   }

   }
   






//draw_sprite_skew_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha, image_xskew, image_yskew);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>18,0</point>
    <point>18,14</point>
    <point>0,14</point>
  </PhysicsShapePoints>
</object>
